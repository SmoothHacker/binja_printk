name: Cross-Platform Build

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      binaryninja_api_path:
        required: false
        default: "vendor/api"
        type: string
      artifact_prefix:
        required: false
        default: "built"
        type: string

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cmake_backend: "Unix Makefiles"
            python: "python3"
            fakelib_name: libbinaryninjacore.so
            binary_glob: "lib${{ inputs.project_name }}.so"
            sed_path: "sed"
            sed_inplace: "-i"

          - os: macos-latest
            cmake_backend: "Unix Makefiles"
            python: "python3"
            fakelib_name: libbinaryninjacore.dylib
            binary_glob: "lib${{ inputs.project_name }}.dylib"
            sed_path: "sed"
            sed_inplace: "-i.bak"

          - os: windows-latest
            cmake_backend: "Ninja"
            python: "py -3"
            fakelib_name: binaryninjacore.lib
            binary_glob: "${{ inputs.project_name }}.dll"
            #sed_path: '& "C:\Program Files\Git\usr\bin\sed.exe"'
            #sed_inplace: "-i"


    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    # Needed so we can use Ninja and actually parallelize build
    - name: Set up Visual Studio shell
      if: ${{ matrix.os == 'windows-latest' }}
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: Configure CMake
      run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBNAPI_DIR=${{ inputs.binaryninja_api_path }} -DFAKE_BN_CORE=ON -S ${{github.workspace}} -B ${{github.workspace}}/build "-G${{ matrix.cmake_backend }}"

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.artifact_prefix }}-${{runner.os}}
        path: ${{github.workspace}}/build/${{matrix.binary_glob}}

    - name: Upload Artifact (PDB)
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.artifact_prefix }}-${{runner.os}}
        path: ${{github.workspace}}/build/${{ inputs.project_name }}.pdb
      if: ${{ matrix.os == 'windows-latest' }}
